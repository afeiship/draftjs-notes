[{"/Users/aric.zheng/github/draftjs-notes/draft-app/src/index.js":"1","/Users/aric.zheng/github/draftjs-notes/draft-app/src/App.js":"2","/Users/aric.zheng/github/draftjs-notes/draft-app/src/reportWebVitals.js":"3","/Users/aric.zheng/github/draftjs-notes/draft-app/src/entities/mediaBlockRenderer.js":"4","/Users/aric.zheng/github/draftjs-notes/draft-app/src/entities/image-decorator.js":"5"},{"size":500,"mtime":1611035167201,"results":"6","hashOfConfig":"7"},{"size":6207,"mtime":1611123697269,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1611035167202,"results":"9","hashOfConfig":"7"},{"size":1047,"mtime":1611120890938,"results":"10","hashOfConfig":"7"},{"size":839,"mtime":1611195736129,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1kg8r7z",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/aric.zheng/github/draftjs-notes/draft-app/src/index.js",[],["24","25"],"/Users/aric.zheng/github/draftjs-notes/draft-app/src/App.js",["26","27"],"/Users/aric.zheng/github/draftjs-notes/draft-app/src/reportWebVitals.js",[],"/Users/aric.zheng/github/draftjs-notes/draft-app/src/entities/mediaBlockRenderer.js",["28","29","30","31"],"import React from 'react';\nimport { EditorState, RichUtils, AtomicBlockUtils } from 'draft-js';\nimport katex from 'katex';\n\nclass Latex extends React.Component {\n  componentDidMount() {\n    const { value } = this.props;\n    katex.render(value, this.root, {\n      throwOnError: false\n    });\n  }\n\n  render() {\n    return <span className=\"std-latex\" ref={(root) => (this.root = root)}></span>;\n  }\n}\n\nexport const mediaBlockRenderer = (block) => {\n  if (block.getType() === 'atomic') {\n    return {\n      component: Media,\n      editable: false\n    };\n  }\n\n  return null;\n};\n\nconst Image = (props) => {\n  if (!!props.src) {\n    return <img className=\"std-image\" src={props.src} />;\n  }\n  return null;\n};\n\nconst Media = (props) => {\n  const entity = props.contentState.getEntity(props.block.getEntityAt(0));\n  const { src, value } = entity.getData();\n  const type = entity.getType();\n\n  let media;\n\n  if (type === 'image') {\n    media = <Image src={src} />;\n  }\n\n  if (type === 'latex') {\n    media = <Latex value={value} />;\n  }\n\n  return media;\n};\n","/Users/aric.zheng/github/draftjs-notes/draft-app/src/entities/image-decorator.js",["32","33"],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":22,"column":7,"nodeType":"40","messageId":"41","endLine":22,"endColumn":15},{"ruleId":"38","severity":1,"message":"42","line":99,"column":11,"nodeType":"40","messageId":"41","endLine":99,"endColumn":18},{"ruleId":"38","severity":1,"message":"43","line":2,"column":10,"nodeType":"40","messageId":"41","endLine":2,"endColumn":21},{"ruleId":"38","severity":1,"message":"44","line":2,"column":23,"nodeType":"40","messageId":"41","endLine":2,"endColumn":32},{"ruleId":"38","severity":1,"message":"45","line":2,"column":34,"nodeType":"40","messageId":"41","endLine":2,"endColumn":50},{"ruleId":"46","severity":1,"message":"47","line":31,"column":12,"nodeType":"48","endLine":31,"endColumn":57},{"ruleId":"46","severity":1,"message":"47","line":13,"column":9,"nodeType":"48","endLine":13,"endColumn":26},{"ruleId":"49","severity":1,"message":"50","line":31,"column":1,"nodeType":"51","endLine":34,"endColumn":3},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'SpanWrap' is defined but never used.","Identifier","unusedVar","'target1' is assigned a value but never used.","'EditorState' is defined but never used.","'RichUtils' is defined but never used.","'AtomicBlockUtils' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]